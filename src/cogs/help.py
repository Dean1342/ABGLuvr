import discord
from discord.ext import commands
from discord import app_commands


class Help(commands.GroupCog, name="help"):
    """Help and general bot information commands."""
    
    def __init__(self, bot):
        self.bot = bot

    @app_commands.command(name="general", description="Show general information about the bot, usage, and commands.")
    async def general_help(self, interaction: discord.Interaction):
        """Show comprehensive help information about the bot."""
        emb = discord.Embed(
            title="ABGLuvr Bot Help",
            description=(
                "A feature-rich Discord bot powered by OpenAI GPT-4.1 with advanced conversational AI, "
                "persona switching, multimodal support, Spotify integration, movie/TV ratings, and intelligent web search."
            ),
            color=discord.Color.purple()
        )
        emb.add_field(
            name="Getting Started",
            value=(
                "‚Ä¢ Type in allowed channels to chat with the bot\n"
                "‚Ä¢ Mention @ABGLuvr anywhere for a quick response\n"
                "‚Ä¢ Reply to messages and mention the bot for context-aware answers\n"
                "‚Ä¢ Upload or reply to images and mention the bot for image analysis\n"
                "‚Ä¢ Upload files (PDF, DOCX, XLSX, TXT) and mention the bot for file analysis\n"
                "‚Ä¢ Web search: The bot auto-searches when it needs current info\n"
                "‚Ä¢ Prefix with ! to ignore your message in allowed channels"
            ),
            inline=False
        )
        emb.add_field(name="\u200b", value="\u200b", inline=False)
        emb.add_field(
            name="Command Groups",
            value=(
                "`/help general` ‚Äî Show this help message\n"
                "`/help spotify` ‚Äî Learn about Spotify integration commands\n"
                "`/help rate` ‚Äî Learn about movie/TV rating commands\n"
                "`/help persona` ‚Äî Learn about persona switching\n\n"
                "`/persona selected` ‚Äî Show your current persona\n"
                "`/persona options` ‚Äî Change your persona\n"
                "`/rate movie <title>` ‚Äî Get movie ratings and info\n"
                "`/rate tv <title>` ‚Äî Get TV show ratings and info\n"
                "`/spotify link` ‚Äî Link your Spotify account\n"
                "`/spotify search` ‚Äî Search Spotify for music"
            ),
            inline=False
        )
        emb.add_field(name="\u200b", value="\u200b", inline=False)
        emb.add_field(
            name="Personas",
            value=(
                "Switch between unique AI personalities like Yoda, Gordon Ramsay, "
                "Dwight Schrute, Jagbir, Lemon, and many more!\n"
                "Each channel remembers your last selected persona."
            ),
            inline=False
        )
        emb.add_field(name="\u200b", value="\u200b", inline=False)
        emb.add_field(
            name="Key Features",
            value=(
                "‚Ä¢ Conversational AI: Context-aware chat with memory per user/channel\n"
                "‚Ä¢ Persona Switching: 20 unique personalities to choose from\n"
                "‚Ä¢ Image Support: Upload or reply to images for visual context\n"
                "‚Ä¢ Web Search: Auto-searches and cites sources when needed\n"
                "‚Ä¢ Spotify Integration: Link account, search music, get recommendations\n"
                "‚Ä¢ Movie/TV Ratings: Get detailed info from TMDb database\n"
                "‚Ä¢ Smart Responses: Automatically splits long messages"
            ),
            inline=False
        )
        emb.add_field(name="\u200b", value="\u200b", inline=False)
        emb.add_field(
            name="AI Model",
            value="OpenAI GPT-4.1 with 100k+ token context window",
            inline=False
        )
        await interaction.response.send_message(embed=emb)

    @app_commands.command(name="spotify", description="Learn about Spotify integration commands and features.")
    async def spotify_help(self, interaction: discord.Interaction):
        """Show detailed help for Spotify commands."""
        emb = discord.Embed(
            title="üéµ Spotify Integration Help",
            description="Connect your Spotify account and discover music with ABGLuvr!",
            color=discord.Color.green()
        )
        emb.add_field(
            name="üîó __Account Management__",
            value=(
                "`/spotify link` ‚Äî Link your Spotify account to the bot\n"
                "`/spotify unlink` ‚Äî Unlink your Spotify account\n"
                "`/spotify registered` ‚Äî Check if your account is linked"
            ),
            inline=False
        )
        emb.add_field(name="\u200b", value="\u200b", inline=False)
        emb.add_field(
            name="üé∂ __Music Discovery__",
            value=(
                "`/spotify search <type> <query>` ‚Äî Search for albums, artists, or tracks\n"
                "`/spotify top <type> [time_range] [limit] [user]` ‚Äî View top artists or tracks\n"
                "`/spotify recents [limit] [user]` ‚Äî See recently played tracks\n"
                "`/spotify recommend [limit] [user]` ‚Äî Get personalized recommendations"
            ),
            inline=False
        )
        emb.add_field(name="\u200b", value="\u200b", inline=False)
        emb.add_field(
            name="‚öôÔ∏è __Command Details__",
            value=(
                "**Search types**: `album`, `artist`, `track`\n"
                "**Time ranges**: `1 year`, `6 months`, `4 weeks`\n"
                "**Limits**: 1-50 items (default: 5-10)\n"
                "**User**: Optional - view another user's stats (if they've linked their account)"
            ),
            inline=False
        )
        emb.add_field(name="\u200b", value="\u200b", inline=False)
        emb.add_field(
            name="üîí __Privacy & Security__",
            value=(
                "‚Ä¢ Your Spotify data is stored securely and locally\n"
                "‚Ä¢ Only basic profile and listening data is accessed\n"
                "‚Ä¢ You can unlink your account anytime with `/spotify unlink`\n"
                "‚Ä¢ Other users can only see your stats if you allow it"
            ),
            inline=False
        )
        emb.add_field(name="\u200b", value="\u200b", inline=False)
        emb.add_field(
            name="üí° __Tips__",
            value=(
                "‚Ä¢ Link your account first with `/spotify link`\n"
                "‚Ä¢ Use the search command to find specific songs or artists\n"
                "‚Ä¢ Check out your music taste with `/spotify top`\n"
                "‚Ä¢ Discover new music with `/spotify recommend`"
            ),
            inline=False
        )
        await interaction.response.send_message(embed=emb)

    @app_commands.command(name="rate", description="Learn about movie and TV show rating commands.")
    async def rate_help(self, interaction: discord.Interaction):
        """Show detailed help for rating commands."""
        emb = discord.Embed(
            title="üé¨ Movie & TV Rating Help",
            description="Get detailed ratings and information about movies and TV shows!",
            color=discord.Color.gold()
        )
        emb.add_field(
            name="üìΩÔ∏è __Movie Commands__",
            value=(
                "`/rate movie <title>` ‚Äî Get movie ratings and details\n"
                "`/rate movie <title> <year>` ‚Äî Search by title and year\n"
                "`/rate movie <title> <year> <cast>` ‚Äî Search with cast member"
            ),
            inline=False
        )
        emb.add_field(name="\u200b", value="\u200b", inline=False)
        emb.add_field(
            name="üì∫ __TV Show Commands__",
            value=(
                "`/rate tv <title>` ‚Äî Get TV show ratings and details\n"
                "`/rate tv <title> <year>` ‚Äî Search by title and first air year\n"
                "`/rate tv <title> <year> <cast>` ‚Äî Search with cast member"
            ),
            inline=False
        )
        emb.add_field(name="\u200b", value="\u200b", inline=False)
        emb.add_field(
            name="üìä __Information Provided__",
            value=(
                "‚Ä¢ **TMDb Rating** ‚Äî Community ratings out of 10\n"
                "‚Ä¢ **Genres** ‚Äî Movie/show categories\n"
                "‚Ä¢ **Cast & Crew** ‚Äî Directors, actors, and key personnel\n"
                "‚Ä¢ **Release Info** ‚Äî Dates, runtime, status\n"
                "‚Ä¢ **Synopsis** ‚Äî Plot overview and description\n"
                "‚Ä¢ **Budget/Revenue** ‚Äî Financial information (movies)\n"
                "‚Ä¢ **Poster Images** ‚Äî High-quality promotional images"
            ),
            inline=False
        )
        emb.add_field(name="\u200b", value="\u200b", inline=False)
        emb.add_field(
            name="üéØ __Search Tips__",
            value=(
                "‚Ä¢ Use specific titles for better results\n"
                "‚Ä¢ Add the year if there are multiple versions\n"
                "‚Ä¢ Include a cast member's name for disambiguation\n"
                "‚Ä¢ The bot will find the best match automatically"
            ),
            inline=False
        )
        emb.add_field(name="\u200b", value="\u200b", inline=False)
        emb.add_field(
            name="üìñ __Examples__",
            value=(
                "`/rate movie Inception` ‚Äî Get info about Inception\n"
                "`/rate movie Batman 2022` ‚Äî Find the 2022 Batman movie\n"
                "`/rate tv Breaking Bad` ‚Äî Get Breaking Bad details\n"
                "`/rate tv The Office 2005 Steve Carell` ‚Äî US version with Steve Carell"
            ),
            inline=False
        )
        await interaction.response.send_message(embed=emb)

    @app_commands.command(name="persona", description="Learn about persona switching and available personalities.")
    async def persona_help(self, interaction: discord.Interaction):
        """Show detailed help for persona commands."""
        emb = discord.Embed(
            title="üé≠ Persona System Help",
            description="Switch between unique AI personalities for different conversation experiences!",
            color=discord.Color.blue()
        )
        emb.add_field(
            name="üîÑ __Persona Commands__",
            value=(
                "`/persona selected` ‚Äî See your current active persona\n"
                "`/persona options <persona>` ‚Äî Switch to a different persona"
            ),
            inline=False
        )
        emb.add_field(name="\u200b", value="\u200b", inline=False)
        emb.add_field(
            name="üé™ __Available Personas__",
            value=(
                "**üßô‚Äç‚ôÇÔ∏è Yoda** ‚Äî Wise Jedi Master with unique speech patterns\n"
                "üß† **Albert Einstein** ‚Äî Brilliant physicist with scientific insights\n"
                "‚úùÔ∏è **Jesus** ‚Äî Kind, wise, and humble spiritual guidance\n"
                "üá∫üá∏ **Republican** ‚Äî Passionate conservative political views\n"
                "üìÑ **Dwight Schrute** ‚Äî Eccentric, ambitious, and loyal (The Office)\n"
                "üò§ **Ego** ‚Äî Arrogant and superior personality\n"
                "üë®‚Äçüç≥ **Chef** ‚Äî Michelin Star culinary expertise\n"
                "üí™ **Fitness Trainer** ‚Äî Exercise and nutrition guidance\n"
                "üî• **Gordon Ramsay** ‚Äî Fiery, brutally honest celebrity chef"
            ),
            inline=False
        )
        emb.add_field(name="\u200b", value="\u200b", inline=False)
        emb.add_field(
            name="üé™ __More Personas__",
            value=(
                "üß¨ **Eugene Porter** ‚Äî Intelligent but socially awkward (Walking Dead)\n"
                "üèÄ **LeBron James** ‚Äî Confident and charismatic basketball star\n"
                "üíª **LTT** ‚Äî Tech-savvy Linus Sebastian personality\n"
                "‚öóÔ∏è **Jesse Pinkman** ‚Äî Unique speech patterns (Breaking Bad)\n"
                "üß™ **Walter White** ‚Äî Authoritative and intelligent (Breaking Bad)\n"
                "ü¶æ **Tony Stark** ‚Äî Genius billionaire playboy philanthropist\n"
                "üíï **Girlfriend** ‚Äî Supportive, caring, and loving\n"
                "üë• **Jagbir** ‚Äî Real Discord member personality\n"
                "üçã **Lemon** ‚Äî Real Discord member personality\n"
                "üéÆ **Epoe** ‚Äî Real Discord member personality"
            ),
            inline=False
        )
        emb.add_field(name="\u200b", value="\u200b", inline=False)
        emb.add_field(
            name="üí° __How It Works__",
            value=(
                "‚Ä¢ Each persona has unique speech patterns and knowledge\n"
                "‚Ä¢ Your persona choice is **per-channel** ‚Äî different channels remember different personas\n"
                "‚Ä¢ The bot stays in character throughout the conversation\n"
                "‚Ä¢ Switch anytime with `/persona options`\n"
                "‚Ä¢ Default persona is friendly and helpful"
            ),
            inline=False
        )
        emb.add_field(name="\u200b", value="\u200b", inline=False)
        emb.add_field(
            name="üéØ __Tips__",
            value=(
                "‚Ä¢ Try different personas for different types of conversations\n"
                "‚Ä¢ Use specific personas for their expertise (Chef for cooking, etc.)\n"
                "‚Ä¢ Real member personas (Jagbir, Lemon) are based on actual Discord users\n"
                "‚Ä¢ Each persona remembers your conversation history"
            ),
            inline=False
        )
        await interaction.response.send_message(embed=emb)


async def setup(bot):
    """Setup function for the cog."""
    await bot.add_cog(Help(bot))
